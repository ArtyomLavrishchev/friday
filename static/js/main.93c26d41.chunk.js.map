{"version":3,"sources":["components/common/SuperInputText/SuperInputText.module.css","components/common/SuperButton/SuperButton.module.css","components/common/SuperCheckbox/SuperCheckbox.module.css","components/Login/Login.tsx","components/Profile/Profile.tsx","components/NewPassword/NewPassword.tsx","components/RecoveryPassword/RecoveryPassword.tsx","components/Registration/Registration.tsx","components/Error404/Error404.tsx","components/common/SuperButton/SuperButton.tsx","components/common/SuperCheckbox/SuperCheckbox.tsx","components/common/SuperInputText/SuperInputText.tsx","components/Test/Test.tsx","components/Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Login","Registration","NewPassword","RecoveryPassword","Profile","Error404","SuperButton","red","className","restProps","finalClassName","s","default","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","superInput","errorInput","blue","value","key","Test","PATH","Routes","path","exact","render","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93c26d41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3QLT1\",\"blue\":\"SuperInputText_blue__1RxES\",\"errorInput\":\"SuperInputText_errorInput__3srZ5\",\"error\":\"SuperInputText_error__2om_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3S9x5\",\"red\":\"SuperButton_red__1KMqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1IfT8\",\"spanClassName\":\"SuperCheckbox_spanClassName__Xxmu6\"};","import React from 'react'\n\nconst Login = () => {\n    return (\n        <div>\n            Login\n        </div>\n    )\n}\n\nexport default Login","import React from 'react'\n\nconst Registration = () => {\n    return (\n        <div>\n            Registration\n        </div>\n    )\n}\n\nexport default Registration","import React from 'react'\n\nconst NewPassword = () => {\n    return (\n        <div>\n            NewPassword\n        </div>\n    )\n}\n\nexport default NewPassword","import React from 'react'\n\nconst RecoveryPassword = () => {\n    return (\n        <div>\n            RecoveryPassword\n        </div>\n    )\n}\n\nexport default RecoveryPassword","import React from 'react'\n\nconst Profile = () => {\n    return (\n        <div>\n            Profile\n        </div>\n    )\n}\n\nexport default Profile","import React from 'react'\n\nconst Error404 = () => {\n    return (\n        <div>\n            Error404\n        </div>\n    )\n}\n\nexport default Error404","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps}\n        />\n    );\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type,\n        onChange,\n        onChangeChecked,\n        className,\n        spanClassName,\n        children,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                {...restProps}\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label>\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type,\n        onChange,\n        onChangeText,\n        onKeyPress,\n        onEnter,\n        error,\n        className, spanClassName,\n        ...restProps\n    }\n) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e)\n        e.key === \"Enter\" && onEnter && onEnter()\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : s.blue }`\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps}\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React from 'react'\nimport SuperButton from '../common/SuperButton/SuperButton'\nimport SuperCheckbox from '../common/SuperCheckbox/SuperCheckbox'\nimport SuperInputText from '../common/SuperInputText/SuperInputText'\n\nconst Test = () => {\n    return (\n        <div>\n            <SuperButton>Button</SuperButton>\n            <SuperCheckbox>Checkbox</SuperCheckbox>\n            <SuperInputText/>\n        </div>\n    )\n}\n\nexport default Test","import React from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport Login from './Login/Login'\nimport Registration from './Profile/Profile'\nimport NewPassword from './NewPassword/NewPassword'\nimport RecoveryPassword from './RecoveryPassword/RecoveryPassword'\nimport Profile from './Registration/Registration'\nimport Error404 from './Error404/Error404'\nimport Test from './Test/Test'\n\nexport const PATH = {\n    Login: '/login',\n    Registration: '/registration',\n    Profile: '/profile',\n    Error404: '/404',\n    Test: '/test',\n    NewPassword: '/newpass',\n    RecoveryPassword: '/recpass',\n}\n\nfunction Routes() {\n    return (\n            <Switch>\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.Test}/>}/>\n                <Route path={PATH.Login} render={() => <Login/>}/>\n                <Route path={PATH.Registration} render={() => <Registration/>}/>\n                <Route path={PATH.NewPassword} render={() => <NewPassword/>}/>\n                <Route path={PATH.RecoveryPassword} render={() => <RecoveryPassword/>}/>\n                <Route path={PATH.Profile} render={() => <Profile/>}/>\n                <Route path={PATH.Test} render={() => <Test/>}/>\n                <Route render={() => <Error404/>}/>\n            </Switch>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport './App.css'\nimport {HashRouter} from 'react-router-dom'\nimport Routes from './components/Routes'\n\nfunction App() {\n    return (\n        <HashRouter>\n            <Routes/>\n        </HashRouter>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}